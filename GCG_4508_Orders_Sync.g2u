Program.Sub.Preflight.Start
V.Global.sOrders.Declare(String)
V.Global.iUserID.Declare(Long)
V.Global.iAPICount.Declare(Long)
V.Global.sFilePath.Declare(String)
V.Global.sFileContents.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

F.Global.Security.getuserid(V.Caller.User,V.Caller.CompanyCode,V.Global.iUserId)

V.Local..BulkDeclareString(sRet, sConString, sFile)
V.Local.bExists.Declare(Boolean)
V.Local.sDate.Declare(String)
V.Local.iDay.Declare(Long)
V.Local.iHour.Declare(Long)

F.Intrinsic.Date.Weekday(V.Ambient.Now,V.Local.iDay)
F.Intrinsic.Date.Hour(V.Ambient.Now,V.Local.iHour)


F.Intrinsic.Control.If(V.Local.iDay,>,1,"AND",V.Local.iDay,<,7)
	F.Intrinsic.Control.If(V.Local.iHour,>,5,"AND",V.Local.iHour,<,19)
'runs from online update: 38130
'this program will sync orders from salesforce to GSS
		
		'GSS Connection
		F.ODBC.Connection!conG.OpenConnection(v.Ambient.PDSN,v.Ambient.PUser,v.Ambient.PPass, 1000000000) 
		
		'Sales Force Connection
		F.ODBC.Connection!conG.ExecuteAndReturn("Select rTrim(USER_NAME), rTrim(PASS), rTrim(SECTOK) From GCG_4508_CONNECTION Where NUM = '1' ", V.Local.sRet)
		F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
		F.Intrinsic.String.Build("Offline=False;Password={1};Security Token={2};User={0};Use Sandbox=False",V.Local.sRet(0),V.Local.sRet(1),V.Local.sRet(2),v.Local.sConString) 
		'Set Connection String 
		F.Automation.SalesForce.SetConnectionString(V.Local.sConString)
		
		F.Intrinsic.String.Format(V.Ambient.Date,"MMDDYYYY",V.Local.sDate)
		
		'If the directories don't exist, go ahead and create them
		F.Intrinsic.String.Build("{0}\API_COUNT",V.Caller.FilesDir,V.Global.sFilePath)
		F.Intrinsic.File.DirExists(V.Global.sFilePath,V.Local.bExists)
		
		F.Intrinsic.Control.If(V.Local.bExists,=,False)
			F.Intrinsic.File.CreateDir(V.Global.sFilePath)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("{0}\ORDER_SYNC",V.Global.sFilePath,V.Global.sFilePath)
		F.Intrinsic.File.DirExists(V.Global.sFilePath,V.Local.bExists)
		
		F.Intrinsic.Control.If(V.Local.bExists,=,False)
			F.Intrinsic.File.CreateDir(V.Global.sFilePath)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("{0}\API_Count_{1}.txt",V.Global.sFilePath,V.Local.sDate,V.Global.sFilePath)
		F.Intrinsic.File.Exists(V.Global.sFilePath,V.Local.bExists)
		
		F.Intrinsic.Control.If(V.Local.bExists,<>,False)
			F.Intrinsic.File.File2String(V.Global.sFilePath,V.Global.sFileContents)
			F.Intrinsic.String.Build("{0}{1}{2}",V.Global.sFileContents,V.Ambient.NewLine,V.Ambient.Now,V.Global.sFileContents)
		F.Intrinsic.Control.Else
			V.Global.sFileContents.Set(V.Ambient.Now)
		F.Intrinsic.Control.EndIf
		
		V.Global.iAPICount.Set(0)
		
		Function.Intrinsic.Control.CallSub(get_data)
		'create the file for the web importer
		Function.Intrinsic.Control.CallSub(create_file)
		'upload the files
		Function.Intrinsic.Control.CallSub(upload)
		'update with items not in the Web Importer
		F.Intrinsic.Control.CallSub(Upload_Extras)
		'close it down
		Function.Intrinsic.Control.CallSub(unload)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Orders_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.CallSub(unload)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.Get_Data.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

V.Local.iC.Declare(Long)
V.Local..BulkDeclareString(ssql, sTemp, sRet)

'from the orders table
			
F.ODBC.Connection!conG.ExecuteAndReturn("Select Top 1  LAST_DATE From GCG_4508_Contact  Where LAST_CONTACT = '4'", V.Local.sRet)
F.Intrinsic.String.Build("Select ID, Right(GS_ORDER_ID__c, 7) As OrderNumber,Legacy_Order__C,Shipping_and_Handling__c , CARRIER_CUSTOMER_ACCOUNT__c as Carrier_NO, Description, '' as LastName,'' as FirstName, '' as Phone,'' as Email, Attention__c as ATTN, Shipping_Address__c as SID,'' as Customer, '' as Salesperson,DATE_DUE__c , Sales_Order_Number__C, PONumber,AccountID, Ship_ID__c, CreatedDate, Flag_For_Drop_Ships__c, FOB_Code__c, Terms__c, Special_Instructions_1__c, User_2__c, User_3__c, User_4__c, User_5__c, Don_t_Allow_Partial_Ship__c, OwnerID, Shipping_Method__c, Payment_by_Credit_Card__c, '' as carrier_customer_account__C,ISNULL(Carrier__c, '0')  Carrier__c  From [Order] Where GS_ORDER_ID__c <> ''  And Legacy_Order__C = 'false' And  GS_ORDER_ID__c <= '{0}' And Shipping_Address__c  <> '' Order By GS_ORDER_ID__c DESC  ", V.Local.sRet, V.Local.ssql)
Function.Automation.SalesForce.SelectToDataTable("ORDER1", True,V.Local.ssql)
F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)

'Check if there are orders to upload
F.Intrinsic.Control.If(V.DataTable.ORDER1.RowCount, <, 1)
	Function.Intrinsic.Control.CallSub(unload)
F.Intrinsic.Control.EndIf
				
'add customer and user(Owner)
Function.Automation.SalesForce.SelectToDataTable("CUST", True, "Select ID as AccountID, GS_Customer_ID__c As Customer From Account")
F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)
F.Data.Dictionary.CreateFromDataTable("dict", "CUST", "AccountID", "Customer",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "AccountID", "Customer")
F.Data.Dictionary.Close("dict")

'Contact
Function.Automation.SalesForce.SelectToDataTable("CONTACT", True, "Select AccountID, LastName, FirstName, Phone, Email From Contact Where Primary_Contact__c = 'True' ")
F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)
F.Data.Dictionary.CreateFromDataTable("dict", "CONTACT", "AccountID", "LastName",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "AccountID", "LastName")
F.Data.Dictionary.Close("dict")

F.Data.Dictionary.CreateFromDataTable("dict", "CONTACT", "AccountID", "FirstName",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "AccountID", "FirstName")
F.Data.Dictionary.Close("dict")

F.Data.Dictionary.CreateFromDataTable("dict", "CONTACT", "AccountID", "Phone",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "AccountID", "Phone")
F.Data.Dictionary.Close("dict")

F.Data.Dictionary.CreateFromDataTable("dict", "CONTACT", "AccountID", "Email",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "AccountID", "Email")
F.Data.Dictionary.Close("dict")

'ship ID
Function.Automation.SalesForce.SelectToDataTable("Temp", True, "Select ID as SID, GS_ADDRESS_ID__c As Ship_ID__c From Addresses__c")
F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Ship_ID__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Ship_ID__c")
F.Data.Dictionary.Close("dict")
F.Data.DataTable.Close("Temp")

Function.Automation.SalesForce.SelectToDataTable("Temp", True,"Select ID as SID,GS_ADDRESS_ID__c as Ship_ID__c, International__c,Discount__c ,Company_Name__c, Address_1__c, Address_2__c , Address_3__c, Address_4__c , Address_5__c,City__C, State__C , Zip_Code__C, Country__c, attention__c, Phone__c,  fax__c  From Addresses__c Where GS_ADDRESS_ID__c <> ''" )
F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)

F.Data.DataTable.AddColumn("ORDER1", "Company_Name__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Company_Name__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Company_Name__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "Address_1__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Address_1__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Address_1__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "International__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "International__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "International__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "Discount__c", "Float")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Discount__c")
F.Data.Dictionary.SetDefaultReturn("dict", 0)
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Discount__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "Address_2__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Address_2__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Address_2__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "Address_3__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Address_3__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Address_3__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "Address_4__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Address_4__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Address_4__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "Address_5__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Address_5__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Address_5__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "City__C", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "City__C",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "City__C")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "State__C", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "State__C",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "State__C")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "Zip_Code__C", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Zip_Code__C",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Zip_Code__C")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "Country__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Country__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Country__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "attention__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "attention__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "attention__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "Phone__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "Phone__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "Phone__c")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "fax__c", "String")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "SID", "fax__c",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "SID", "fax__c")
F.Data.Dictionary.Close("dict")
F.Data.DataTable.Close("Temp")

'salesPerson
Function.Automation.SalesForce.SelectToDataTable("Temp", True, "Select ID as OwnerID, External_ID__c As Salesperson From USER")
F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "OwnerID", "Salesperson",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "OwnerID", "Salesperson")
F.Data.Dictionary.Close("dict")
F.Data.DataTable.Close("Temp")

'carrier cd
Function.Automation.SalesForce.SelectToDataTable("Temp", True, "Select ID as Carrier__c, Carrier_Code__c As carrier_customer_account__C From Carrier_Code__c")
F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "Carrier__c", "carrier_customer_account__C",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", " ")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "Carrier__c", "carrier_customer_account__C")
F.Data.Dictionary.Close("dict")
F.Data.DataTable.Close("Temp")

'''ship via
F.Data.DataTable.AddColumn("ORDER1", "Ship_Via", "String")
F.Data.DataTable.CreateFromSQL("Temp", "conG", "SELECT DISTINCT OC.CARRIER_CD AS carrier_customer_account__C, OC.SRVC_TYPE AS Code, CAST(OCST.INTL_ID AS VARCHAR(6)) AS Service_Type, OC.SHORT_DESC AS Description, IF (OC.CLASS = 'T', 'Truck', '') AS Class, OC.SCAC AS SCAC, SV.MESSAGE AS Ship_Via ,OC.CARRIER_CD,OC.SRVC_TYPE FROM OE_CARRIER OC LEFT OUTER JOIN SHIP_VIA SV ON SV.ID = OC.VIA LEFT OUTER JOIN OE_CARR_SRV_TYPE OCST ON OCST.SRVC_TYPE = OC.SRVC_TYPE")
F.Data.Dictionary.CreateFromDataTable("dict", "Temp", "carrier_customer_account__C", "Ship_Via",1,True)
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "carrier_customer_account__C", "Ship_Via")
F.Data.Dictionary.Close("dict")
F.Data.DataTable.Close("Temp")

'change no back order to bit
F.Data.DataTable.AddExpressionColumn("ORDER1", "Don_t_Allow_Partial_Ship__c2", "String","IIF (Don_t_Allow_Partial_Ship__c = 'False', 'N', 'Y')")

'create a filter for orders that already exist in GSS, we will not upload these
F.Data.DataTable.AddColumn("ORDER1", "InGSSHead", "string")
F.Data.Dictionary.CreateFromSQL("dict", "conG", "Select Order_No as OrderNumber , Order_No As InGSSHead From ORDER_HEADER")
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "OrderNumber", "InGSSHead")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("ORDER1", "InGSSHist", "string")
F.Data.Dictionary.CreateFromSQL("dict", "conG", "Select Order_No as OrderNumber , Order_No As InGSSHist From ORDER_HIST_HEAD")
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("ORDER1", "dict", "OrderNumber", "InGSSHist")
F.Data.Dictionary.Close("dict")

'now filter to view and then back to table ORDER
F.Data.DataView.Create("ORDER1", "ORDER1_V")
Function.Data.DataView.SetFilter("ORDER1", "ORDER1_V", "[InGSSHead] = '' And [InGSSHist] = ''")
F.Data.DataView.ToDataTable("ORDER1", "ORDER1_V","Order", True)

F.Intrinsic.String.Build("Select ID, OrderID, Description, Global_Shop_Product_Name__c as Part,Ship_ID__c, Line_Type__c, Discount__c, Quantity, UnitPrice, User_1__c, User_2__c, User_3__c, User_4__c, User_5__c,Item_Due_Date__c, Do_not_Deliver_before__c From OrderItem", V.Local.sTemp,V.Local.ssql)
Function.Automation.SalesForce.SelectToDataTable("LINES", True,V.Local.ssql)
F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)

'Add columns to the lines
F.Data.Datatable.AddColumn("LINES", "RECORD_NO", "String")
F.Data.Datatable.AddColumn("LINES", "ADD", "String")
F.Data.Datatable.AddColumn("LINES", "TOTAL", "String")
'Select Count(Parent) as number from "BOM_MSTR" Where Parent = '210900' and Sequence_Bom > '0000'
'loop through lines table and fill in add column with number of lines if BOM
F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.LINES.RowCount--, 1)
	F.Intrinsic.String.Build("Select Count(Parent) as number from BOM_MSTR Where Parent = '{0}' and Sequence_Bom > '0000'",  V.DataTable.LINES(v.Local.iC).PART!Fieldvaltrim, V.Local.ssql)
	F.ODBC.Connection!conG.ExecuteAndReturn(V.Local.ssql, V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet, =, "0")
		F.Data.DataTable.SetValue("LINES", V.Local.iC, "ADD", "1")
	F.Intrinsic.Control.Else
		F.Data.DataTable.SetValue("LINES", V.Local.iC, "ADD", V.Local.sRet)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iC)

'unit of measure
F.Data.DataTable.AddColumn("LINES", "UM", "string")
F.Data.Dictionary.CreateFromSQL("dict", "conG", "Select rTrim(Part) as Part , UM_INVENTORY As UM From INVENTORY_MSTR")
F.Data.Dictionary.SetDefaultReturn("dict", "EA")
F.Data.DataTable.FillFromDictionary("LINES", "dict", "Part", "UM")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddColumn("LINES", "BOM", "string")
F.Data.Dictionary.CreateFromSQL("dict", "conG", "Select rTrim(Part) as Part , CODE_BOM As BOM From INVENTORY_MSTR")
F.Data.Dictionary.SetDefaultReturn("dict", "")
F.Data.DataTable.FillFromDictionary("LINES", "dict", "Part", "BOM")
F.Data.Dictionary.Close("dict")

F.Data.DataTable.AddExpressionColumn("Order", "DISC_O", "Float", "ISNULL(Discount__c,0)/100")
F.Data.DataTable.AddExpressionColumn("LINES", "Disc", "Float", "ISNULL(Discount__c,0)/100")

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Orders_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.CallSub(unload)
F.Intrinsic.Control.EndTry
Program.Sub.Get_Data.End

Program.Sub.Create_File.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare
V.Local.fOverridePrice.Declare(Float)

Function.Intrinsic.Control.If(V.DataTable.Order.RowCount, =, 0)
	Function.Intrinsic.Control.ExitSub
Function.Intrinsic.Control.EndIf

'create table for discount/ add price back
F.Data.DataTable.Create("D", True)
F.Data.DataTable.AddColumn("D", "PRICE", "Float")
F.Data.DataTable.AddColumn("D", "Record_NO", "String")
F.Data.DataTable.AddColumn("D", "OrderNO", "String")
F.Data.DataTable.AddColumn("D", "Discount", "Float")
F.Data.DataTable.AddColumn("D", "QTY", "Float")
F.Data.DataTable.AddColumn("D", "LineDesc", "String")
F.Data.DataTable.AddColumn("D", "PART", "String")

V.Local..BulkDeclareFloat(fTemp, fDiscount)
V.Local..BulkDeclareLong(iC, iLine, iRecord, iLINE_1)
V.Local..BulkDeclareString(sTemp,sHeader, sLine, sFilter, sFull, sPath, SFileName, sExtHeader, sContact, sOrder, sDisc1, sDisc2, sRecord_NO, sPART)

F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.Order.RowCount--, 1)
	'select to view Lines where Lines Order ID = Header ID
	F.Intrinsic.String.Build("[OrderID] = '{0}'", V.DataTable.Order(v.Local.iC).ID!Fieldvaltrim, V.local.sFilter)
	F.Data.DataView.Create("Lines", "Lines_V")
	F.Data.DataView.SetFilter("Lines", "Lines_V", V.Local.sFilter)
	
	'customer
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Customer!Fieldvaltrim," ",7, V.Local.sTemp)
	F.Intrinsic.String.Build("O{0}",V.Local.sTemp,V.Local.sHeader)
	'order number
	F.Intrinsic.String.LPad(V.DataTable.Order(v.Local.iC).OrderNumber!Fieldvaltrim,"0",7, V.Local.sOrder)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sOrder,V.local.sHeader) 
	'freight
	Function.Intrinsic.Control.If(V.DataTable.Order(v.Local.iC).Shipping_and_Handling__c!Fieldvaltrim,<>,"")
		F.Intrinsic.String.RPad(v.Local.sHeader," ",15,v.Local.sHeader)
		F.Intrinsic.String.Split(V.DataTable.Order(v.Local.iC).Shipping_and_Handling__c!Fieldvaltrim, ".", V.Local.sTemp)
		Function.Intrinsic.Control.If(V.Local.sTemp.UBound, >, 0)
			F.Intrinsic.String.LPad(V.Local.sTemp(0), "0", 8, V.Local.sDisc1)
			F.Intrinsic.String.RPad(V.Local.sTemp(1), "0", 2, V.Local.sDisc2)
		Function.Intrinsic.Control.Else
			F.Intrinsic.String.LPad(V.Local.sTemp(0), "0", 8, V.Local.sDisc1)
			F.Intrinsic.String.RPad(V.Local.sDisc1, "0", 10, V.Local.sDisc2)
		Function.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("{0}{1}{2}",V.local.sHeader,V.Local.sDisc1,V.Local.sDisc2,V.local.sHeader)
	Function.Intrinsic.Control.EndIf
	
	'order due
	Function.Intrinsic.Control.If(V.DataTable.Order(v.Local.iC).DATE_DUE__c!Fieldvaltrim,<>,"")
		F.Intrinsic.String.RPad(v.Local.sHeader," ",27,v.Local.sHeader)
		V.Local.sTemp.Set(V.DataTable.Order(v.Local.iC).DATE_DUE__c!Fieldvaltrim)
		F.Intrinsic.String.Format(V.Local.sTemp,"YYYYMMDD",V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",v.Local.sHeader,V.Local.sTemp,v.Local.sHeader)
	Function.Intrinsic.Control.EndIf
	
	'order date
	Function.Intrinsic.Control.If(V.DataTable.Order(v.Local.iC).CreatedDate!Fieldvaltrim,<>,"")
		F.Intrinsic.String.RPad(v.Local.sHeader," ",35,v.Local.sHeader)
		V.Local.sTemp.Set(V.DataTable.Order(v.Local.iC).CreatedDate!Fieldvaltrim)
		F.Intrinsic.String.Format(V.Local.sTemp,"YYYYMMDD",V.Local.sTemp)
		'create file name here
		F.Intrinsic.String.Build("{0}_{1}.txt",V.DataTable.Order(v.Local.iC).OrderNumber!Fieldvaltrim, V.Local.sTemp,v.Local.sFileName)	
		F.Intrinsic.String.Build("{0}{1}",v.Local.sHeader,V.Local.sTemp,v.Local.sHeader)
	Function.Intrinsic.Control.EndIf

	'user field 1
	F.Intrinsic.String.RPad(v.Local.sHeader," ",43,v.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Special_Instructions_1__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	'user field 2
	F.Intrinsic.String.RPad(v.Local.sHeader," ",73,v.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).User_2__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	'user field 3
	F.Intrinsic.String.RPad(v.Local.sHeader," ",103,v.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).User_3__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	'user field 4
	F.Intrinsic.String.RPad(v.Local.sHeader," ",133,v.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).User_4__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	'user field 5
	F.Intrinsic.String.RPad(v.Local.sHeader," ",163,v.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).User_5__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	
	'customer PO
	F.Intrinsic.String.RPad(V.local.sHeader," ",201, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).PONumber!Fieldvaltrim," ",15, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	
	'shipping data
	F.Intrinsic.String.RPad(V.local.sHeader," ",232, V.Local.sHeader)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,"S",V.local.sHeader) 
	
	'ship via
	F.Intrinsic.String.RPad(V.local.sHeader," ",233, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Ship_Via!Fieldvaltrim," ",20, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	
	'carrier account
	F.Intrinsic.String.RPad(V.local.sHeader," ",253, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).carrier_customer_account__C!Fieldvaltrim," ",6, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	
	'Ship Name (30)
	F.Intrinsic.String.RPad(V.local.sHeader," ",259, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Company_Name__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader)
	
	'Ship Address 1 (30)
	F.Intrinsic.String.RPad(V.local.sHeader," ",289, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Address_1__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader)
	
	'Ship Address 2 (30)
	F.Intrinsic.String.RPad(V.local.sHeader," ",319, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Address_2__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader)
	
	'Ship Address 3 (30)
	F.Intrinsic.String.RPad(V.local.sHeader," ",349, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Address_3__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader)
	
	'Ship  City (25)
	F.Intrinsic.String.RPad(V.local.sHeader," ",379, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).City__C!Fieldvaltrim," ",25, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader)
	
	'Ship State (2)
	F.Intrinsic.String.RPad(V.local.sHeader," ",404, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).State__C!Fieldvaltrim," ",2, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader)
	
	'Ship Zip (13)
	F.Intrinsic.String.RPad(V.local.sHeader," ",406, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Zip_Code__C!Fieldvaltrim," ",13, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader)
	
	'Ship Country (3)
	F.Intrinsic.String.RPad(V.local.sHeader," ",419, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Country__c!Fieldvaltrim," ",3, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader)

	'ship attn:
	F.Intrinsic.String.RPad(V.local.sHeader," ",422, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Attention__c!Fieldvaltrim," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	
	'order discount
	F.Intrinsic.String.RPad(V.local.sHeader," ",464, V.Local.sHeader)
	V.Local.fDiscount.Set(0)
	V.Local.fTemp.Set(V.DataTable.Order(v.Local.iC).Discount__c!FieldValFloat)
	
	Function.Intrinsic.Control.If(V.Local.fTemp, <>, 0)
		F.Intrinsic.Math.Div(V.Local.fTemp, 100, V.Local.fTemp)
	Function.Intrinsic.Control.Else
		V.Local.fTemp.Set(0)
	Function.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Split(V.Local.fTemp, ".", V.Local.sTemp)
	
	Function.Intrinsic.Control.If(V.Local.sTemp.UBound, >, 0)
		F.Intrinsic.String.LPad(V.Local.sTemp(0), "0", 1, V.Local.sDisc1)
		F.Intrinsic.String.RPad(V.Local.sTemp(1), "0", 4, V.Local.sDisc2)
	Function.Intrinsic.Control.Else
		F.Intrinsic.String.LPad(V.Local.sTemp, "0", 1, V.Local.sDisc1)
		F.Intrinsic.String.RPad(V.Local.sTemp, "0", 4, V.Local.sDisc2)
	Function.Intrinsic.Control.EndIf
	
	V.Local.fDiscount.Set(V.Local.fTemp)
	F.Intrinsic.String.Build("{0}{1}{2}",V.local.sHeader,V.Local.sDisc1,V.Local.sDisc2,V.local.sHeader)
	
	'salesman, code in GSS
	F.Intrinsic.String.RPad(V.local.sHeader," ",469, V.Local.sHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Salesperson!Fieldvaltrim," ",3, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 

	'ship to ID
	F.Intrinsic.String.RPad(V.local.sHeader," ",548, V.Local.sHeader)
	F.Intrinsic.String.LPad(V.DataTable.Order(v.Local.iC).Ship_ID__c!Fieldvaltrim,"0",6, V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",6, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader) 
	
	'contact Name
	F.Intrinsic.String.RPad(V.local.sHeader," ",584, V.Local.sHeader)
	F.Intrinsic.String.Build("{0} {1}",V.DataTable.Order(v.Local.iC).FirstName!Fieldvaltrim,V.DataTable.Order(v.Local.iC).LastName!Fieldvaltrim, V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",30, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sHeader,V.Local.sTemp,V.local.sHeader)

	'extended header data
	V.local.sExtHeader.Set("")
	'International Address (1)
	V.Local.sTemp.Set(V.DataTable.Order(v.Local.iC).International__c!Fieldvaltrim)
	
	F.Intrinsic.Control.If(V.Local.sTemp, =, "True")
		V.Local.sTemp.Set("Y")
	F.Intrinsic.Control.Else
		V.Local.sTemp.Set("N")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship Name (30)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Company_Name__c!Fieldvaltrim," ",40, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship Address 1 (30)
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",41, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Address_1__c!Fieldvaltrim," ",40, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship Address 2 (30)
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",81, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Address_2__c!Fieldvaltrim," ",40, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship Address 3 (30)
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",121, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Address_3__c!Fieldvaltrim," ",40, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship Address 4 (30)
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",161, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Address_4__c!Fieldvaltrim," ",40, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship Address 5 (30)
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",201, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Address_5__c!Fieldvaltrim," ",40, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship  City (25)
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",241, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).City__C!Fieldvaltrim," ",25, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship State (2)
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",266, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).State__C!Fieldvaltrim," ",2, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship Zip (13)
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",268, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Zip_Code__C!Fieldvaltrim," ",13, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'Ship Country (3)
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",281, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Country__c!Fieldvaltrim," ",25, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader)
	'ship attn:
	F.Intrinsic.String.RPad(V.local.sExtHeader," ",306, V.Local.sExtHeader)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Attention__c!Fieldvaltrim," ",40, V.Local.sTemp)
	F.Intrinsic.String.Build("{0}{1}",V.local.sExtHeader,V.Local.sTemp,V.local.sExtHeader) 
		
	'loop through line data
	F.Intrinsic.Control.For(V.Local.iLine, 0, V.DataView.Lines!Lines_V.Rowcount--, 1)
		'add to datatable 'D' to add discount to the line data
		'format the record_no string
		'calculate the record_no
		F.Intrinsic.Control.If(V.Local.iLine, =, 0)
			F.Intrinsic.Math.Add(V.Local.iRecord, 1, V.Local.iRecord)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Add(V.Local.iLine, -1, V.Local.iLINE_1)
			V.Local.sPART.Set(V.DataView.Lines!Lines_V(V.Local.iLINE_1).BOM!Fieldvaltrim)
			F.Intrinsic.String.Left(V.Local.sPART, 2, V.Local.sPART)
				F.Intrinsic.Control.If(V.Local.sPART, =, "B")
					F.Intrinsic.Math.Add(V.Local.iRecord, V.DataView.Lines!Lines_V(V.Local.iLINE_1).ADD!Fieldvaltrim, V.Local.iRecord)
					F.Intrinsic.Math.Add(V.Local.iRecord, 1, V.Local.iRecord)
				F.Intrinsic.Control.ElseIf(V.Local.sPART, =, "C")
					F.Intrinsic.Math.Add(V.Local.iRecord, V.DataView.Lines!Lines_V(V.Local.iLINE_1).ADD!Fieldvaltrim, V.Local.iRecord)
					F.Intrinsic.Math.Add(V.Local.iRecord, 1, V.Local.iRecord)
				F.Intrinsic.Control.Else
					F.Intrinsic.Math.Add(V.Local.iRecord, 1, V.Local.iRecord)
				F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.LPad(V.Local.iRecord, "0", 3, V.Local.sRecord_NO)
		F.Intrinsic.String.RPad(V.Local.sRecord_NO, "0", 4, V.Local.sRecord_NO)
		
		Function.Intrinsic.Control.If(V.DataView.Lines!Lines_V(V.Local.iLine).Disc!Fieldvaltrim, <>, 0)
			V.Local.fDiscount.Set(V.DataView.Lines!Lines_V(V.Local.iLine).Disc!Fieldvaltrim)
		Function.Intrinsic.Control.Else
			V.Local.fDiscount.Set(V.DataTable.Order(v.Local.iC).DISC_O!FieldValFloat)
		Function.Intrinsic.Control.EndIf
		
		F.Data.DataTable.AddRow("D", "OrderNO",V.Local.sOrder ,"PRICE", V.DataView.Lines!Lines_V(V.Local.iLine).UnitPrice!FieldvalTrim,"RECORD_NO", V.Local.sRecord_NO,"PART", V.DataView.Lines!Lines_V(V.Local.iLine).PART!FieldvalTrim,"LineDesc",V.DataView.Lines!Lines_V(V.Local.iLine).Description!Fieldvaltrim,"Discount", V.Local.fDiscount, "QTY",V.DataView.Lines!Lines_V(V.Local.iLine).Quantity!FieldvalTrim )
		
		'enter the line number so we keep the same when adding the xtra items for discounts
		'Line Number> added in qty
		F.Intrinsic.String.Left(V.Local.sRecord_NO, 3, V.Local.sRecord_NO)
		
		'QTY
		F.Intrinsic.String.Split(V.DataView.Lines!Lines_V(V.Local.iLine).Quantity!FieldvalTrim,".",V.Local.sTemp)
		Function.Intrinsic.Control.If(v.Local.sTemp.UBound,<,1) 
			'no decimal 
			F.Intrinsic.String.LPad(V.Local.sTemp(0).Trim,"0",9,V.Local.sTemp(0)) 
			F.Intrinsic.String.RPad(V.Local.sTemp(0).Trim,"0",13,V.Local.sTemp(0)) 
		Function.Intrinsic.Control.Else 
			F.Intrinsic.String.LPad(V.Local.sTemp(0).Trim,"0",9,V.Local.sTemp(0)) 
			F.Intrinsic.String.RPad(V.Local.sTemp(1).Trim,"0",4,V.Local.sTemp(1))
			F.Intrinsic.String.Join(V.Local.sTemp,"",v.Local.sTemp)
		Function.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("{0} {1}",V.Local.sRecord_NO,V.Local.sTemp,V.Local.sline)
	
		'UM
		F.Intrinsic.String.RPad(V.Local.sLine, " ", 27, V.Local.sLine)
		F.Intrinsic.String.RPad(V.DataView.Lines!Lines_V(V.Local.iLine).UM!Fieldvaltrim," ",2, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",V.local.sLine,V.Local.sTemp,V.local.sLine)
		
		'PART	
		F.Intrinsic.String.RPad(V.Local.sLine, " ", 29, V.Local.sLine)
		F.Intrinsic.String.RPad(V.DataView.Lines!Lines_V(V.Local.iLine).Part!Fieldvaltrim," ",20, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",V.local.sLine,V.Local.sTemp,V.local.sLine)
		
		'UnitPrice; PRICE
		F.Intrinsic.String.RPad(V.Local.sLine," ",69,V.Local.sLine)
		F.Intrinsic.String.Split(V.DataView.Lines!Lines_V(V.Local.iLine).UnitPrice!FieldvalTrim,".",V.Local.sTemp)
		Function.Intrinsic.Control.If(v.Local.sTemp.UBound,<,1)
		'no decimal
			F.Intrinsic.String.LPad(V.Local.sTemp(0).Trim,"0",10,V.Local.sTemp(0)) 
			F.Intrinsic.String.RPad(V.Local.sTemp(0).Trim,"0",16,V.Local.sTemp(0)) 
			F.Intrinsic.String.Build("{0}{1}",v.Local.sLine,V.Local.sTemp(0),v.Local.sLine)
		Function.Intrinsic.Control.Else
			F.Intrinsic.String.LPad(V.Local.sTemp(0).Trim,"0",10,V.Local.sTemp(0)) 
			F.Intrinsic.String.RPad(V.Local.sTemp(1).Trim,"0",6,V.Local.sTemp(1)) 
			F.Intrinsic.String.Build("{0}{1}{2}",v.Local.sLine,V.Local.sTemp(0),V.Local.sTemp(1),v.Local.sLine)
		Function.Intrinsic.Control.EndIf
		
		'DISCOUNT PRICE
		F.Intrinsic.String.RPad(V.Local.sLine," ",85,V.Local.sLine)
		F.Intrinsic.Control.If(V.DataView.Lines!Lines_V(V.Local.iLine).Disc!Fieldvaltrim, >, 0)
			F.Intrinsic.Math.Mult(V.DataView.Lines!Lines_V(V.Local.iLine).Disc!Fieldvaltrim, V.DataView.Lines!Lines_V(V.Local.iLine).UnitPrice!FieldvalTrim, V.Local.sTemp)
			F.Intrinsic.Math.Sub(V.DataView.Lines!Lines_V(V.Local.iLine).UnitPrice!FieldvalTrim, V.Local.sTemp, V.Local.fTemp)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.DataTable.Order(v.Local.iC).DISC_O!Fieldvaltrim, >, 0)
				F.Intrinsic.Math.Mult(V.DataTable.Order(v.Local.iC).DISC_O!Fieldvaltrim, V.DataView.Lines!Lines_V(V.Local.iLine).UnitPrice!FieldvalTrim, V.Local.sTemp)
				F.Intrinsic.Math.Sub(V.DataView.Lines!Lines_V(V.Local.iLine).UnitPrice!FieldvalTrim, V.Local.sTemp, V.Local.fTemp)
			F.Intrinsic.Control.Else
				V.Local.fTemp.Set(V.DataView.Lines!Lines_V(V.Local.iLine).UnitPrice!FieldvalTrim)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		V.Local.fOverridePrice.Set(V.Local.fTemp)
		F.Intrinsic.String.Split(V.Local.fTemp,".",V.Local.sTemp)
		Function.Intrinsic.Control.If(v.Local.sTemp.UBound,<,1)
		'no decimal
			F.Intrinsic.String.LPad(V.Local.sTemp(0).Trim,"0",10,V.Local.sTemp(0)) 
			F.Intrinsic.String.RPad(V.Local.sTemp(0).Trim,"0",16,V.Local.sTemp(0)) 
			F.Intrinsic.String.Build("{0}{1}",v.Local.sLine,V.Local.sTemp(0),v.Local.sLine)
		Function.Intrinsic.Control.Else
			F.Intrinsic.String.LPad(V.Local.sTemp(0).Trim,"0",10,V.Local.sTemp(0)) 
			F.Intrinsic.String.RPad(V.Local.sTemp(1).Trim,"0",6,V.Local.sTemp(1)) 
			F.Intrinsic.String.Build("{0}{1}{2}",v.Local.sLine,V.Local.sTemp(0),V.Local.sTemp(1),v.Local.sLine)
		Function.Intrinsic.Control.EndIf
		
		'item_due date: DATE ITEM Prom
		Function.Intrinsic.Control.If(V.DataView.Lines!Lines_V(V.Local.iLine).Item_Due_Date__c!Fieldvaltrim,<>,"")
			F.Intrinsic.String.RPad(V.Local.sLine, " ", 158, V.Local.sLine)
			V.Local.sTemp.Set(V.DataView.Lines!Lines_V(V.Local.iLine).Item_Due_Date__c!Fieldvaltrim)
			F.Intrinsic.String.Format(V.Local.sTemp,"YYYYMMDD",V.Local.sTemp)
			F.Intrinsic.String.Build("{0}{1}",v.Local.sLine,V.Local.sTemp,v.Local.sLine)
		Function.Intrinsic.Control.EndIf
		
		'line data
		
		'user 1
		F.Intrinsic.String.RPad(V.Local.sLine, " ", 166, V.Local.sLine)
		F.Intrinsic.String.RPad(V.DataView.Lines!Lines_V(V.Local.iLine).User_1__c!Fieldvaltrim," ",30, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",V.local.sLine,V.Local.sTemp,V.local.sLine)
		'user 2
		F.Intrinsic.String.RPad(V.DataView.Lines!Lines_V(V.Local.iLine).User_2__c!Fieldvaltrim," ",30, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",V.local.sLine,V.Local.sTemp,V.local.sLine)
		'user 3
		F.Intrinsic.String.RPad(V.DataView.Lines!Lines_V(V.Local.iLine).User_3__c!Fieldvaltrim," ",30, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",V.local.sLine,V.Local.sTemp,V.local.sLine)
		'user 4
		F.Intrinsic.String.RPad(V.DataView.Lines!Lines_V(V.Local.iLine).User_4__c!Fieldvaltrim," ",30, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",V.local.sLine,V.Local.sTemp,V.local.sLine)
		'user 5
		F.Intrinsic.String.RPad(V.DataView.Lines!Lines_V(V.Local.iLine).User_5__c!Fieldvaltrim," ",30, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",V.local.sLine,V.Local.sTemp,V.local.sLine)
		
		'No DLVR Before
		F.Intrinsic.String.RPad(V.Local.sLine, " ", 332, V.Local.sLine)
		Function.Intrinsic.Control.If(V.DataView.Lines!Lines_V(V.Local.iLine).Do_not_Deliver_before__c!Fieldvaltrim,<>,"")
			V.Local.sTemp.Set(V.DataView.Lines!Lines_V(V.Local.iLine).Do_not_Deliver_before__c!Fieldvaltrim)
			F.Intrinsic.String.Format(V.Local.sTemp,"YYYYMMDD",V.Local.sTemp)
			F.Intrinsic.String.Build("{0}{1}",v.Local.sLine,V.Local.sTemp,v.Local.sLine)
		Function.Intrinsic.Control.EndIf

		'text for lines
		F.Intrinsic.String.RPad(V.Local.sLine, " ", 348, V.Local.sLine)
		V.Local.sTemp.Set(V.DataView.Lines!Lines_V(V.Local.iLine).Description!Fieldvaltrim)
		F.Intrinsic.String.RPad(V.local.sTemp," ",300, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}T{1}",v.Local.sLine,V.Local.sTemp,v.Local.sLine)
				
		'dropship line
		F.Intrinsic.String.RPad(V.Local.sLine, " ", 650, V.Local.sLine)
		Function.Intrinsic.Control.If(V.DataTable.Order(v.Local.iC).Flag_For_Drop_Ships__c!Fieldvaltrim, =, True)
				F.Intrinsic.String.Build("{0}D",v.Local.sLine, V.Local.sLine)
		Function.Intrinsic.Control.EndIf		
						
		'create the order lines txt for this order
		F.Intrinsic.String.RPad(V.local.sHeader," ",701, V.Local.sHeader)
		F.Intrinsic.String.Build("{0}{1}",v.Local.sHeader,v.Local.sLine,v.Local.sLine)
		
		F.Intrinsic.Control.If(V.Local.fOverridePrice,=,0)
			'Add the Accept Zero price flag
			F.Intrinsic.String.RPad(V.Local.sLine," ",1353,V.Local.sLine)
			F.Intrinsic.String.Build("{0}1",V.Local.sLine,V.Local.sLine)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.RPad(v.Local.sLine," ",1517,v.Local.sLine)
		F.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sExtHeader,v.Local.sLine)
		
		'contacts email and phone
		'email
		F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Email!Fieldvaltrim," ",100, V.Local.sTemp)
		V.Local.sContact.Set(V.Local.sTemp)
		'phone
		F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Phone!Fieldvaltrim," ",20, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",V.local.sContact,V.Local.sTemp,V.local.sContact)
		
		'include comments here since it comes right after contact info
		V.Local.sTemp.Set(V.DataTable.Order(v.Local.iC).Description!Fieldvaltrim)
		F.Intrinsic.String.Replace(V.Local.sTemp, V.Ambient.NewLine, " ", V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp, " ",300, V.Local.sTemp)
		F.Intrinsic.String.Build("{0}{1}",V.local.sContact,V.Local.sTemp,V.local.sContact)
		F.Intrinsic.String.RPad(v.Local.sContact," ",420,v.Local.sContact)
		V.Local.sTemp.Set("FYYYNNN")
		F.Intrinsic.String.Build("{0}{1}",V.local.sContact,V.Local.sTemp,V.local.sContact)
		
		F.Intrinsic.String.RPad(v.Local.sLine," ",2209,v.Local.sLine)
		F.Intrinsic.String.Build("{0}{1}",v.Local.sLine,v.Local.sContact,v.Local.sLine)
		
		F.Intrinsic.String.RPad(v.Local.sLine," ",4636,v.Local.sLine)
		F.Intrinsic.String.Build("{0}{1}{2}",V.Local.sFull,V.Local.sLine,V.Ambient.NewLine,V.Local.sFull) 
	
		F.Intrinsic.Control.Next(V.Local.iLine)
	
	'close the dataview for the lines 
	F.Data.DataView.Close("LINES", "LINES_V")
	'reset the line counter to 0
	V.Local.iRecord.Set(0)	
	'create the complete file for this order	
	F.Intrinsic.String.Build("{0}\Web_Orders\{1}",V.Caller.FilesDir,V.Local.sFileName,V.Local.sPath)
	F.Intrinsic.File.String2File(V.Local.sPath,V.Local.sFull)
	'reset sFull
	V.Local.sFull.Set("")
	
F.Intrinsic.Control.Next(V.Local.iC)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Orders_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.CallSub(unload)
F.Intrinsic.Control.EndTry
Program.Sub.Create_File.End

Program.Sub.UPLOAD.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

Function.Intrinsic.Control.If(V.DataTable.Order.RowCount, =, 0)
	Function.Intrinsic.Control.ExitSub
Function.Intrinsic.Control.EndIf

V.Local.sParams.Declare(String) 
'Call ORDUPL to upload sales orders created, it will process all txt files created by this program.
'if ORDUPL encounters an error, it will move the file to the ERRORS folder designated in GLOBAL\FILES\GSSPARAM.txt or GSSPARAMccc.txt

F.Intrinsic.String.Build("{0}!*!ORDUPL",V.Caller.CompanyCode,V.Local.sParams)
F.Global.General.CallWrapperSync(51,V.Local.sParams)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Orders_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.CallSub(unload)
F.Intrinsic.Control.EndTry
Program.Sub.UPLOAD.End

Program.Sub.Upload_Extras.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

Function.Intrinsic.Control.If(V.DataTable.Order.RowCount, =, 0)
	Function.Intrinsic.Control.ExitSub
Function.Intrinsic.Control.EndIf

V.Local..BulkDeclareLong(iC, iLine)
V.Local..BulkDeclareString(sTemp, ssql, sOrder, sADD4, sADD5, sTrans, sCert, sExp, sWho, sUSR1, sUSR2, sShip,sCarrier,sSort, sTemp2, sQuote, sDate, sFlag, sComments, sSubLine,sLine, sTERMS, sRet)
	
'''''carrier account	
F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.Order.RowCount--, 1) 
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).carrier_customer_account__C!Fieldvaltrim," ",6, V.Local.sCarrier)
	F.Intrinsic.String.LPad(V.DataTable.Order(v.Local.iC).OrderNumber!Fieldvaltrim,"0",7, V.Local.sTemp)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Ship_Via!Fieldvaltrim," ",20, V.Local.sShip)
	F.Intrinsic.String.Build("Update ORDER_HEADER  SET CARRIER_CD = '{0}' , SHIP_VIA = '{1}' Where Order_NO = '{2}' And Record_NO = '  C'  ", V.Local.sCarrier, V.Local.sShip, V.local.sTemp, ,V.Local.ssql)
	F.ODBC.Connection!conG.Execute(V.Local.ssql)
	F.Intrinsic.String.Build("Update ORDER_HEADER  SET CARRIER_CD = '{0}',  SHIP_VIA = '{1}' Where Order_NO = '{2}'  And Record_NO = '  A' ", V.Local.sCarrier, V.Local.sShip, V.local.sTemp, ,V.Local.ssql)
	F.ODBC.Connection!conG.Execute(V.Local.ssql)
F.Intrinsic.Control.Next(V.Local.iC)

'Unit Price and discount
F.Data.DataTable.AddExpressionColumn("D", "AMT_DISC", "Float", "PRICE*Discount*QTY")
F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.D.RowCount--, 1) 
	F.Intrinsic.String.LPad(V.DataTable.D(v.Local.iC).OrderNO!Fieldvaltrim,"0",7, V.Local.sOrder)
	F.Intrinsic.String.Build("Update ORDER_LINES set PRICE = '{0}', PRICE_ORDER = '{0}', DISCOUNT = '{1}', ORDER_DISC_AMT = '-{2}', AMT_DISC_ORDER = '-{2}', AMT_DISC_ORD_ORDER = '-{2}',FLAG_ALWAYS_DISCOUNT = 'Y' Where ORDER_NO = '{3}' And Record_No = '{4}'", V.DataTable.D(v.Local.iC).PRICE!Fieldvaltrim,V.DataTable.D(v.Local.iC).Discount!Fieldvaltrim, V.DataTable.D(v.Local.iC).AMT_DISC!Fieldvaltrim,V.Local.sOrder, V.DataTable.D(v.Local.iC).Record_NO!Fieldvaltrim,V.Local.ssql)
	F.ODBC.Connection!conG.Execute(V.Local.ssql)
F.Intrinsic.Control.Next(V.Local.iC)	
	
'code_fob, terms, no backorder 
F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.Order.RowCount--, 1) 
	F.Intrinsic.String.LPad(V.DataTable.Order(v.Local.iC).OrderNumber!Fieldvaltrim,"0",7, V.Local.sOrder)
	Function.Intrinsic.String.Ucase (V.DataTable.Order(v.Local.iC).Terms__c!Fieldvaltrim, Variable.local.sTERMS)
	F.Intrinsic.String.Build("Update ORDER_HEADER  SET CODE_FOB = '{0}',  TERMS = '{1}',  FLAG_NO_BACKORDER = '{2}' Where Order_NO = '{3}' And Record_NO = '  A'", V.DataTable.Order(v.Local.iC).FOB_Code__c!Fieldvaltrim, Variable.local.sTERMS,  V.DataTable.Order(v.Local.iC).Don_t_Allow_Partial_Ship__c2!Fieldvaltrim, V.local.sOrder, V.Local.ssql)
	F.ODBC.Connection!conG.Execute(V.Local.ssql)
F.Intrinsic.Control.Next(V.Local.iC)

'header comments
F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.Order.RowCount--, 1) 
F.Intrinsic.String.LPad(V.DataTable.Order(v.Local.iC).OrderNumber!Fieldvaltrim,"0",7, V.Local.sOrder)
V.Local.sComments.Redim(0,0)
V.Local.sComments.Set("")
V.Local.sLine.Redim(0,0)
V.Local.sLine.Set("")
F.Intrinsic.String.Split(V.DataTable.Order(v.Local.iC).Description!Fieldvaltrim, V.Ambient.NewLine, V.Local.sLine)
F.Intrinsic.Control.For(V.Local.iLine, 0, V.Local.sLine.UBound, 1) 
	V.Local.sSubLine.Redim(0,0)
	V.Local.sSubLine.Set("")
	Function.Intrinsic.String.LimitSplit(V.Local.sLine(V.Local.iLine), 30, False, V.Local.sSubLine)	
	F.Intrinsic.String.Join(V.Local.sSubLine, V.Ambient.NewLine, V.Local.sSubLine)
	F.Intrinsic.String.Build("{0}{1}{2}", V.Local.sComments, V.Local.sSubLine, V.Ambient.NewLine, V.Local.sComments)
F.Intrinsic.Control.Next(V.Local.iLine)
F.Intrinsic.String.Build("Update ORDER_HF_TEXT set  Text = '{0}' Where ORDER_NUMBER = '{1}'", V.Local.sComments.PSQLFriendly,V.Local.sOrder, V.Local.ssql)

F.ODBC.Connection!conG.Execute(V.Local.ssql)
F.Intrinsic.Control.Next(V.Local.iC)

'line text, because of formatt
F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.D.RowCount--, 1)
	F.Intrinsic.String.LPad(V.DataTable.D(v.Local.iC).OrderNO!Fieldvaltrim,"0",7, V.Local.sOrder)
	V.Local.sComments.Redim(0,0)
V.Local.sComments.Set("")
V.Local.sLine.Redim(0,0)
V.Local.sLine.Set("")
F.Intrinsic.String.Split(V.DataTable.D(v.Local.iC).LineDesc!Fieldvaltrim, V.Ambient.NewLine, V.Local.sLine)
F.Intrinsic.Control.For(V.Local.iLine, 0, V.Local.sLine.UBound, 1) 
	V.Local.sSubLine.Redim(0,0)
	V.Local.sSubLine.Set("")
	Function.Intrinsic.String.LimitSplit(V.Local.sLine(V.Local.iLine), 30, False, V.Local.sSubLine)	
	F.Intrinsic.String.Join(V.Local.sSubLine, V.Ambient.NewLine, V.Local.sSubLine)
	F.Intrinsic.String.Build("{0}{1}{2}", V.Local.sComments, V.Local.sSubLine, V.Ambient.NewLine, V.Local.sComments)
F.Intrinsic.Control.Next(V.Local.iLine)
F.Intrinsic.String.Build("Update ORDER_LN_TEXT set  Text = '{0}' Where ORDER_NUM = '{1}' And ORDER_LINE = '{2}'", V.Local.sComments.PSQLFriendly,V.Local.sOrder, V.DataTable.D(v.Local.iC).Record_NO!Fieldvaltrim,V.Local.ssql)
F.ODBC.Connection!conG.Execute(V.Local.ssql)
F.Intrinsic.Control.Next(V.Local.iC)

'Change discount flag
F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.Order.RowCount--, 1) 
	F.Intrinsic.String.LPad(V.DataTable.Order(v.Local.iC).OrderNumber!Fieldvaltrim,"0",7, V.Local.sOrder)
	F.Intrinsic.String.Build("Update ORDER_HEADER SET FLAG_ALWAYS_DISCOUNT = 'Y' Where Order_NO = '{0}' And Record_TYPE = 'A'", V.local.sOrder, V.Local.ssql)
	F.ODBC.Connection!conG.Execute(V.Local.ssql)
	F.Intrinsic.String.Build("Update ORDER_HEADER SET FLAG_ALWAYS_DISCOUNT = 'Y' Where Order_NO = '{0}' And Record_TYPE = 'L'", V.local.sOrder, V.Local.ssql)
	F.ODBC.Connection!conG.Execute(V.Local.ssql)
F.Intrinsic.Control.Next(V.Local.iC)

'carrier account number
F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.Order.RowCount--, 1) 
	F.Intrinsic.String.LPad(V.DataTable.Order(v.Local.iC).OrderNumber!Fieldvaltrim,"0",7, V.Local.sOrder)
	F.Intrinsic.String.RPad(V.DataTable.Order(v.Local.iC).Carrier_NO!Fieldvaltrim," ",25, V.Local.sTemp)
	F.Intrinsic.String.Build("Update ORDER_HEADER SET CARRIER_ACCT = '{0}' Where Order_NO = '{1}' And Record_NO = '  A' And RECORD_TYPE = 'A'", V.Local.sTemp, V.local.sOrder, V.Local.ssql)
	F.ODBC.Connection!conG.Execute(V.Local.ssql)
	F.Intrinsic.String.Build("Update ORDER_SHIP_TO SET CARRIER_ACCT = '{0}' Where Order_NO = '{1}' And Record_NO = '  C' And RECORD_TYPE = 'C'", V.Local.sTemp, V.local.sOrder, V.Local.ssql)
	F.ODBC.Connection!conG.Execute(V.Local.ssql)
F.Intrinsic.Control.Next(V.Local.iC)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Orders_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.CallSub(unload)
F.Intrinsic.Control.EndTry
Program.Sub.Upload_Extras.End

Program.Sub.Unload.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

V.Local.sFile.Declare(String)
V.Local.bExists.Declare(Boolean)

F.Intrinsic.String.Build("{0}: {1} - End:{2}",V.Global.sFileContents,V.Global.iAPICount,V.Ambient.Now,V.Global.sFileContents)
F.Intrinsic.File.String2File(V.Global.sFilePath,V.Global.sFileContents)

'path where file exists
F.Intrinsic.String.Build("{0}\\WEB_ORDERS\IS_RUNNING\Running_{1}.txt",V.Caller.FilesDir,"Y",V.Local.sFile)

'delete file for the next run
F.Intrinsic.File.Exists(V.Local.sFile,V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists,=,True)
	Function.Intrinsic.File.DeleteFile(V.Local.sFile)
Function.Intrinsic.Control.EndIf
'close connection
Function.ODBC.Connection!conG.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Orders_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.Unload.End

Program.Sub.Comments.Start
${$0$}$$}$DH1$}$6/15/2017 9:24:32 AM$}$False
${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$This project will upload sales order via the web importer
Program.Sub.Comments.End