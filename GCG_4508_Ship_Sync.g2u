Program.Sub.Preflight.Start
V.Global.iUserID.Declare(Long)
V.Global.iAPICount.Declare(Long)
V.Global.sFilePath.Declare(String)
V.Global.sFileContents.Declare(String)
V.Global.iAttemptCounter.Declare(Long)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

F.Global.Security.getuserid(V.Caller.User,V.Caller.CompanyCode,V.Global.iUserId)

V.Local..BulkDeclareString(sRet, sConString)
V.Local.bExists.Declare(Boolean)
V.Local.sDate.Declare(String)
V.Local.iDay.Declare(Long)
V.Local.iHour.Declare(Long)
'Dawn Hughes 8/30/2017 SWEED
'this program will sync shipments from GSS to salesforce HOOK # 28532 POST SAVE IN SHIPMENTS

F.Intrinsic.Date.Weekday(V.Ambient.Now,V.Local.iDay)
F.Intrinsic.Date.Hour(V.Ambient.Now,V.Local.iHour)


F.Intrinsic.Control.If(V.Local.iDay,>,1,"AND",V.Local.iDay,<,7)
	F.Intrinsic.Control.If(V.Local.iHour,>,5,"AND",V.Local.iHour,<,19)
		
		'GSS Connection
		F.ODBC.Connection!conG.OpenConnection(v.Ambient.PDSN,v.Ambient.PUser,v.Ambient.PPass) 
		
		'Sales Force Connection
		F.ODBC.Connection!conG.ExecuteAndReturn("Select rTrim(USER_NAME), rTrim(PASS), rTrim(SECTOK) From GCG_4508_CONNECTION Where NUM = '1'", V.Local.sRet)
		F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
		F.Intrinsic.String.Build("Offline=False;Password={1};Security Token={2};User={0};Use Sandbox=False",V.Local.sRet(0),V.Local.sRet(1),V.Local.sRet(2),v.Local.sConString) 
		'Set Connection String 
		F.Automation.SalesForce.SetConnectionString(V.Local.sConString)
		
		Function.Intrinsic.Control.If(V.Caller.Hook, =, "28532")
			'gather data
			F.Intrinsic.Control.CallSub(Get_Data)
			
		F.Intrinsic.Control.ElseIf(V.Caller.Hook, =, "38130")
			F.Intrinsic.String.Format(V.Ambient.Date,"MMDDYYYY",V.Local.sDate)
			
			'If the directories don't exist, go ahead and create them
			F.Intrinsic.String.Build("{0}\API_COUNT",V.Caller.FilesDir,V.Global.sFilePath)
			F.Intrinsic.File.DirExists(V.Global.sFilePath,V.Local.bExists)
			
			F.Intrinsic.Control.If(V.Local.bExists,=,False)
				F.Intrinsic.File.CreateDir(V.Global.sFilePath)
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("{0}\SHIP",V.Global.sFilePath,V.Global.sFilePath)
			F.Intrinsic.File.DirExists(V.Global.sFilePath,V.Local.bExists)
			
			F.Intrinsic.Control.If(V.Local.bExists,=,False)
				F.Intrinsic.File.CreateDir(V.Global.sFilePath)
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Build("{0}\{1}API_Count_{2}.txt",V.Global.sFilePath,V.Caller.User,V.Local.sDate,V.Global.sFilePath)
			F.Intrinsic.File.Exists(V.Global.sFilePath,V.Local.bExists)
			
			F.Intrinsic.Control.If(V.Local.bExists,<>,False)
				'Try to write to the file. There is no logic to prevent this from running at the same time. Keep attempting to read for awhile. If fails then we just want to keep going. No reason to stop the process. 
				F.Intrinsic.Control.Try
					F.Intrinsic.Control.Label("READ")
					F.Intrinsic.File.File2String(V.Global.sFilePath,V.Global.sFileContents)
				F.Intrinsic.Control.Catch
					F.Intrinsic.Math.Add(V.Global.iAttemptCounter,1,V.Global.iAttemptCounter)
					
					F.Intrinsic.Control.If(V.Global.iAttemCounter,<,100000)
						F.Intrinsic.Control.GoTo("READ")
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndTry
				'Reset attempt counter for when we write the file
				V.Global.iAttemptCounter.Set(0)
				F.Intrinsic.String.Build("{0}{1}{2}",V.Global.sFileContents,V.Ambient.NewLine,V.Ambient.Now,V.Global.sFileContents)
			F.Intrinsic.Control.Else
				V.Global.sFileContents.Set(V.Ambient.Now)
			F.Intrinsic.Control.EndIf
			
			V.Global.iAPICount.Set(0)
			F.Intrinsic.Control.CallSub(Tracking)
		Function.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.CallSub(unload)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Ship_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.CallSub(unload)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.Get_Data.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

V.Local..BulkDeclareString(ssql, sFields, sValues, sOrder, sOrderId, sTemp, sRetKey)
V.Local..BulkDeclareLong(iC)

' so we can get the order ID from salesforce
V.Local.sOrder.Set(V.Passed.FIRST-ORDER)
F.Intrinsic.String.LPad(V.Local.sOrder, "0", 7, V.Local.sOrder)
'select from SHIPMENT_HEADER and SHIPMENT_LINES
F.Intrinsic.String.Build("Select * From V_SHIPMENT_HEADER Where ORDER_NO = '{0}' And ORDER_SUFFIX = '{1}'", V.Passed.FIRST-ORDER, V.Passed.FIRST-SEQ, V.Local.ssql)
F.Data.DataTable.CreateFromSQL("HEAD", "conG", V.Local.ssql)
F.Intrinsic.String.Build("Select * From V_SHIPMENT_LINES Where ORDER_NO = '{0}' And ORDER_SUFFIX = '{1}' And LINE_TYPE <> 'F'", V.Passed.FIRST-ORDER, V.Passed.FIRST-SEQ, V.Local.ssql)
F.Data.DataTable.CreateFromSQL("LINE", "conG", V.Local.ssql)

F.Intrinsic.String.Build("Select ID as OrderID, GS_ORDER_ID__C As OrderNumber From [Order] Where GS_ORDER_ID__C  = '{0}'", V.Local.sOrder, V.Local.ssql)
Function.Automation.SalesForce.SelectToDataTable("SF", True, V.Local.ssql)

F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)

F.Intrinsic.Control.If(V.DataTable.SF.RowCount, =, 0)
	Function.Intrinsic.Control.CallSub(unload)
F.Intrinsic.Control.EndIf

V.Local.sOrderId.Set(V.DataTable.SF(0).OrderID!FieldValTrim)

F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.LINE.RowCount--, 1)

	F.Intrinsic.String.Build("Select Id as Ordee From OrderItem Where OrderID = '{0}' And Global_Shop_Product_Name__c = '{1}'", V.DataTable.SF(0).OrderID!FieldValTrim, V.DataTable.LINE(V.Local.iC).PART!FieldValTrim, V.Local.ssql)
	Function.Automation.SalesForce.SelectToDataTable("Part", True, V.Local.ssql)
	
	'if the part table is empty do not move over to Sales Force
	
	F.Intrinsic.Control.If(V.DataTable.Part.RowCount, >, 0)
	
		'now we take this orderitemnumber for the table- it will reference the part in the order line
		'Shipping_Invoicing__c.Order_Product__c = OrderItem.ID
		''''insert statements
		'Select ID, Carrier_Code__c From Carrier_Code__c
		F.Intrinsic.String.Build("Select ID, Carrier_Code__c From Carrier_Code__c Where Carrier_Code__c = '{0}'", V.DataTable.HEAD(0).CARRIER_CD!FieldValTrim, V.Local.ssql)
		Function.Automation.SalesForce.SelectToDataTable("Carrier", True, V.Local.ssql)
		F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)
		
		F.Intrinsic.Control.If(V.DataTable.Carrier.RowCount,>,0)
			F.Intrinsic.String.Build("({0},{1},{2},{3},{4},{5},{6},{7},", "Customer_Ship__c", "Packing_Slip__c", "Tracking_Number__c", "Estimate_Arrival_Date__c", "Waybill__c",  "RecordTypeID", "Carrier__c","Ship_Via__c", V.Local.sFields)
			F.Intrinsic.String.Build("('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}',", V.DataTable.HEAD(0).SHIP_ID!FieldValTrim, V.DataTable.HEAD(0).PCK_NO!FieldValTrim ,  V.DataTable.HEAD(0).TRACKING_NO!FieldValTrim, V.DataTable.HEAD(0).ETA_DATE!FieldValTrim, V.DataTable.HEAD(0).WAY_BILL!FieldValTrim,   "012410000012mPQAAY",  V.DataTable.Carrier(0).ID!FieldValTrim, V.DataTable.HEAD(0).SHIP_VIA!FieldValTrim,V.Local.sValues )
			F.Intrinsic.String.Build("{0} {1}, {2}, {3}, {4}, {5}, {6})", V.Local.sFields,"Date_Shipped__c",  "Quantity_Shipped__c", "Cost__c",  "Sales_Price__c", "Order_Product__c", "Ordee__c" ,V.Local.sFields)
			F.Intrinsic.String.Build("{0} '{1}', '{2}', '{3}', '{4}', '{5}', '{6}')", V.Local.sValues,V.DataTable.LINE(V.Local.iC).DATE_SHIP!FieldValTrim, V.DataTable.LINE(V.Local.iC).QTY_SHIPPED!FieldValTrim, V.DataTable.LINE(V.Local.iC).COST!FieldValTrim,  V.DataTable.LINE(V.Local.iC).PRICE!FieldValTrim, V.DataTable.Part(0).Ordee!FieldValTrim, V.Local.sOrderId, V.Local.sValues)	
			F.Intrinsic.String.Build("Insert Into Shipping_Invoicing__c {0} Values {1}", V.Local.sFields, V.Local.sValues, V.Local.ssql)
			F.Automation.SalesForce.ExecuteSQLReturnID(V.Local.ssql, V.Local.sRetKey) 
		
			'now we write this to a custom table if the tracking number is empty
			F.Intrinsic.Control.If( V.DataTable.HEAD(0).TRACKING_NO!FieldValTrim, =, "")
				F.Intrinsic.String.Build("Insert Into GCG_4508_TRACKING_NO (ORDER_NO, ORDER_SUFFIX, SF_ID) Values ('{0}', '{1}', '{2}')", V.Passed.FIRST-ORDER, V.Passed.FIRST-SEQ, V.Local.sRetKey, V.Local.ssql)
				F.ODBC.Connection!conG.Execute(V.Local.ssql)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		F.Data.DataTable.Close("Carrier")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.Close("Part")
F.Intrinsic.Control.Next(V.Local.iC)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Ship_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.CallSub(unload)
F.Intrinsic.Control.EndTry
Program.Sub.Get_Data.End

Program.Sub.Tracking.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

V.Local..BulkDeclareString(ssql, sRet)
V.Local..BulkDeclareLong(iC)
'this is from online update, update the tracking numbers from shippng integrator
F.Data.DataTable.CreateFromSql("T", "conG", "Select * From GCG_4508_TRACKING_NO")

'check if we returned anything
F.Intrinsic.Control.If(V.DataTable.T.RowCount, >, 0)
	F.Intrinsic.Control.For(V.Local.iC, 0, V.DataTable.T.RowCount--, 1)
		F.Intrinsic.String.Build("Select TRACKING_NO From V_SHIPMENT_HEADER Where ORDER_NO = '{0}' And ORDER_SUFFIX = '{1}'", V.DataTable.T(V.Local.iC).ORDER_NO!FieldVal, V.DataTable.T(V.Local.iC).ORDER_SUFFIX!FieldVal, V.Local.ssql)
		F.ODBC.Connection!conG.ExecuteAndReturn(V.Local.ssql, V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet.Trim, <>, "")
			'then update salesForce
			F.Intrinsic.String.Build("Update Shipping_Invoicing__c Set Tracking_Number__c = '{0}' Where ID = '{1}'", V.Local.sRet.Trim, V.DataTable.T(V.Local.iC).SF_ID!FieldValTrim, V.Local.ssql)
			Function.Automation.SalesForce.ExecuteSQL(V.Local.ssql)
			F.Intrinsic.Math.Add(V.Global.iAPICount,1,V.Global.iAPICount)
			'now delete this from the dataBase since we no longer need it
			F.Intrinsic.String.Build("Delete From GCG_4508_TRACKING_NO Where ORDER_NO = '{0}' And ORDER_SUFFIX = '{1}' And SF_ID = '{2}' ", V.DataTable.T(V.Local.iC).ORDER_NO!FieldValTrim, V.DataTable.T(V.Local.iC).ORDER_SUFFIX!FieldValTrim,  V.DataTable.T(V.Local.iC).SF_ID!FieldValTrim,V.Local.ssql)
			F.ODBC.Connection!conG.Execute(V.Local.ssql)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iC)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Ship_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.Tracking.End

Program.Sub.UNLoad.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

F.Intrinsic.Control.Try
	F.Intrinsic.Control.Label("WRITE")
	'Save the new value to the file
	F.Intrinsic.File.String2File(V.Global.sFilePath,V.Global.sFileContents)
F.Intrinsic.Control.Catch
	F.Intrinsic.Math.Add(V.Global.iAttemptCounter,1,V.Global.iAttemptCounter)
	
	F.Intrinsic.Control.If(V.Global.iAttemptCounter,<,100000)
		F.Intrinsic.Control.GoTo("WRITE")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndTry
		
Function.ODBC.Connection!conG.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: GCG_4508_Ship_Sync: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.CurrentSubroutine, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Local.sError)
    F.Global.Messaging.queuemessage(V.Caller.CompanyCode,V.Global.iUserId.Trim,V.Caller.Caller,"Order Sync Program","onlineupdate@sweed.com","onlineupdate@sweed.com",V.Local.sError)	
    Function.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.UNLoad.End

Program.Sub.Comments.Start
${$0$}$$}$$}$12:00:00 AM$}$False
${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$This project will upload sales order via the web importer
Program.Sub.Comments.End